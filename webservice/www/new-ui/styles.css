@import "/css/general.css";

@layer general, utility, components;

@layer utility {
    .grid-row {
        display: grid;
        grid-auto-flow: row;
    }

    .close {
        margin: 20px;
    }
}

@layer components {

    html,
    body {
        height: 100%;
        margin: 0;
    }

    #main {
        height: 100%;
    }

    #main-ui {
        flex-grow: 1;

        display: grid;

        @media (width >=800px) {
            grid-template-areas:
                "form main main"
                "sidebar main main"
                "sidebar main main";
            grid-template-columns: 1fr 2.2fr;
            grid-template-rows: min-content 1fr 1fr;
        }

        @media (width < 800px) {
            grid-template-rows: 1fr 1fr 3fr;
            grid-template-columns: 1fr 1fr 0.5fr;
            grid-template-areas:
                "form form results"
                "sidebar sidebar sidebar"
                "main main main";
        }
    }

    #sidebar-form {
        grid-area: form;

        :not([multiple]) {
            vertical-align: top;
        }

        text-wrap: nowrap;
        overflow-x: auto;

        [type="submit"] {
            float: left;
        }

        dialog {
            --btn-size: max(20px, 3cqi);

            top: revert;
            transform: translateX(-50%);

            select[multiple] {
                height: 50cqb;
            }

            .grid {
                display: grid;
                grid-template-areas: "main close-button";
                grid-template-columns: calc(100% - var(--btn-size)) var(--btn-size);
            }

            button.close {
                grid-area: close-button;
                width: var(--btn-size);
                aspect-ratio: 1 / 1;
                margin: 0;
            }
        }
    }

    #viewing-area {
        height: 100%;

        .result-stats {
            border: 2px solid;
            display: flex;
            gap: 10px;

            *:not(:last-child) {
                padding-right: 10px;
                border-right: 1px dashed white;
            }
        }

        .result-stats::before {
            content: "Stats: ";
            border-right: 1px dashed white;
            padding-right: 10px;
        }

        [data-name="totalCost"]::before {
            content: "$"
        }

        [data-name="count"]::before {
            content: "Count: "
        }

        &:has(display-entry) h3 {
            display: none;
        }

        &:not(:has(display-entry)) {
            align-items: center;
        }

        @media (width < 800px) {
            grid-column: 1 / -1;
            overflow: auto auto;
        }

        @media (width >=800px) {
            grid-column: 2 / -1;
            grid-row: 1 / -1;
        }
    }

    #entry-output {
        --grid-size: 50%;

        height: 100%;
        overflow: auto auto;

        grid-area: main;

        display: flex;

        @media (width >=800px) {
            flex-wrap: wrap;
        }

        @media(aspect-ratio > 1) {
            flex-direction: row;
        }

        @media(aspect-ratio <=1) {
            flex-direction: column;
        }

    }

    .sidebar {
        grid-area: sidebar;
        min-height: 200px;

        @media (width < 800px) {
            overflow-y: hidden;
        }
    }

    .sidebar--items {
        display: flex;
        width: clamp(200px, 35vw, 35vw);
        flex-direction: column;

        min-height: 10dvh;
        max-height: 83%;

        width: 100%;

        float: left;

        padding: 0;
    }

    #result-info {
        grid-area: results;
    }

    @media (width < 800px) {
        #main-ui {
            position: relative;

        }

        .sidebar {
            :not(.sidebar--items):not(.sidebar--items *) {
                position: sticky;
                left: 0;
            }
        }

        .sidebar--items {
            grid-column: 1 / -1;
            flex-direction: row;
            min-width: fit-content;
            min-height: 100%;
        }
    }
}
